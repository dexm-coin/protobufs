// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blockchain.proto

package blockchain

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Transaction struct {
	Sender               []byte   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipient            string   `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Nonce                uint32   `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Amount               uint64   `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Gas                  uint32   `protobuf:"varint,5,opt,name=gas,proto3" json:"gas,omitempty"`
	Timestamp            uint64   `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ContractCreation     bool     `protobuf:"varint,7,opt,name=contractCreation,proto3" json:"contractCreation,omitempty"`
	Function             string   `protobuf:"bytes,8,opt,name=function,proto3" json:"function,omitempty"`
	Args                 []uint64 `protobuf:"varint,9,rep,packed,name=args,proto3" json:"args,omitempty"`
	Data                 []byte   `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"`
	R                    []byte   `protobuf:"bytes,11,opt,name=r,proto3" json:"r,omitempty"`
	S                    []byte   `protobuf:"bytes,12,opt,name=s,proto3" json:"s,omitempty"`
	PubSchnorrKey        []byte   `protobuf:"bytes,13,opt,name=pubSchnorrKey,proto3" json:"pubSchnorrKey,omitempty"`
	Shard                uint32   `protobuf:"varint,14,opt,name=shard,proto3" json:"shard,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ac6287ce250c9a, []int{0}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetSender() []byte {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *Transaction) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *Transaction) GetNonce() uint32 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Transaction) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Transaction) GetGas() uint32 {
	if m != nil {
		return m.Gas
	}
	return 0
}

func (m *Transaction) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Transaction) GetContractCreation() bool {
	if m != nil {
		return m.ContractCreation
	}
	return false
}

func (m *Transaction) GetFunction() string {
	if m != nil {
		return m.Function
	}
	return ""
}

func (m *Transaction) GetArgs() []uint64 {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *Transaction) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Transaction) GetR() []byte {
	if m != nil {
		return m.R
	}
	return nil
}

func (m *Transaction) GetS() []byte {
	if m != nil {
		return m.S
	}
	return nil
}

func (m *Transaction) GetPubSchnorrKey() []byte {
	if m != nil {
		return m.PubSchnorrKey
	}
	return nil
}

func (m *Transaction) GetShard() uint32 {
	if m != nil {
		return m.Shard
	}
	return 0
}

type Block struct {
	Index                 uint64         `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Timestamp             uint64         `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PrevHash              []byte         `protobuf:"bytes,3,opt,name=prevHash,proto3" json:"prevHash,omitempty"`
	Miner                 string         `protobuf:"bytes,4,opt,name=miner,proto3" json:"miner,omitempty"`
	Transactions          []*Transaction `protobuf:"bytes,5,rep,name=transactions,proto3" json:"transactions,omitempty"`
	MerkleRootTransaction []byte         `protobuf:"bytes,6,opt,name=merkleRootTransaction,proto3" json:"merkleRootTransaction,omitempty"`
	MerkleRootReceipt     []byte         `protobuf:"bytes,7,opt,name=merkleRootReceipt,proto3" json:"merkleRootReceipt,omitempty"`
	Shard                 uint32         `protobuf:"varint,8,opt,name=shard,proto3" json:"shard,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}       `json:"-"`
	XXX_unrecognized      []byte         `json:"-"`
	XXX_sizecache         int32          `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ac6287ce250c9a, []int{1}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Block) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Block) GetPrevHash() []byte {
	if m != nil {
		return m.PrevHash
	}
	return nil
}

func (m *Block) GetMiner() string {
	if m != nil {
		return m.Miner
	}
	return ""
}

func (m *Block) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *Block) GetMerkleRootTransaction() []byte {
	if m != nil {
		return m.MerkleRootTransaction
	}
	return nil
}

func (m *Block) GetMerkleRootReceipt() []byte {
	if m != nil {
		return m.MerkleRootReceipt
	}
	return nil
}

func (m *Block) GetShard() uint32 {
	if m != nil {
		return m.Shard
	}
	return 0
}

type MerkleRootsSigned struct {
	Shard                         uint32   `protobuf:"varint,1,opt,name=shard,proto3" json:"shard,omitempty"`
	MerkleRootsTransaction        [][]byte `protobuf:"bytes,2,rep,name=merkleRootsTransaction,proto3" json:"merkleRootsTransaction,omitempty"`
	MerkleRootsReceipt            [][]byte `protobuf:"bytes,3,rep,name=merkleRootsReceipt,proto3" json:"merkleRootsReceipt,omitempty"`
	RSignedMerkleRootsTransaction []byte   `protobuf:"bytes,4,opt,name=r_signedMerkleRootsTransaction,json=rSignedMerkleRootsTransaction,proto3" json:"r_signedMerkleRootsTransaction,omitempty"`
	SSignedMerkleRootsTransaction []byte   `protobuf:"bytes,5,opt,name=s_signedMerkleRootsTransaction,json=sSignedMerkleRootsTransaction,proto3" json:"s_signedMerkleRootsTransaction,omitempty"`
	RSignedMerkleRootsReceipt     []byte   `protobuf:"bytes,6,opt,name=r_signedMerkleRootsReceipt,json=rSignedMerkleRootsReceipt,proto3" json:"r_signedMerkleRootsReceipt,omitempty"`
	SSignedMerkleRootsReceipt     []byte   `protobuf:"bytes,7,opt,name=s_signedMerkleRootsReceipt,json=sSignedMerkleRootsReceipt,proto3" json:"s_signedMerkleRootsReceipt,omitempty"`
	RValidators                   [][]byte `protobuf:"bytes,8,rep,name=r_validators,json=rValidators,proto3" json:"r_validators,omitempty"`
	PValidators                   [][]byte `protobuf:"bytes,9,rep,name=p_validators,json=pValidators,proto3" json:"p_validators,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *MerkleRootsSigned) Reset()         { *m = MerkleRootsSigned{} }
func (m *MerkleRootsSigned) String() string { return proto.CompactTextString(m) }
func (*MerkleRootsSigned) ProtoMessage()    {}
func (*MerkleRootsSigned) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ac6287ce250c9a, []int{2}
}

func (m *MerkleRootsSigned) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerkleRootsSigned.Unmarshal(m, b)
}
func (m *MerkleRootsSigned) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerkleRootsSigned.Marshal(b, m, deterministic)
}
func (m *MerkleRootsSigned) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerkleRootsSigned.Merge(m, src)
}
func (m *MerkleRootsSigned) XXX_Size() int {
	return xxx_messageInfo_MerkleRootsSigned.Size(m)
}
func (m *MerkleRootsSigned) XXX_DiscardUnknown() {
	xxx_messageInfo_MerkleRootsSigned.DiscardUnknown(m)
}

var xxx_messageInfo_MerkleRootsSigned proto.InternalMessageInfo

func (m *MerkleRootsSigned) GetShard() uint32 {
	if m != nil {
		return m.Shard
	}
	return 0
}

func (m *MerkleRootsSigned) GetMerkleRootsTransaction() [][]byte {
	if m != nil {
		return m.MerkleRootsTransaction
	}
	return nil
}

func (m *MerkleRootsSigned) GetMerkleRootsReceipt() [][]byte {
	if m != nil {
		return m.MerkleRootsReceipt
	}
	return nil
}

func (m *MerkleRootsSigned) GetRSignedMerkleRootsTransaction() []byte {
	if m != nil {
		return m.RSignedMerkleRootsTransaction
	}
	return nil
}

func (m *MerkleRootsSigned) GetSSignedMerkleRootsTransaction() []byte {
	if m != nil {
		return m.SSignedMerkleRootsTransaction
	}
	return nil
}

func (m *MerkleRootsSigned) GetRSignedMerkleRootsReceipt() []byte {
	if m != nil {
		return m.RSignedMerkleRootsReceipt
	}
	return nil
}

func (m *MerkleRootsSigned) GetSSignedMerkleRootsReceipt() []byte {
	if m != nil {
		return m.SSignedMerkleRootsReceipt
	}
	return nil
}

func (m *MerkleRootsSigned) GetRValidators() [][]byte {
	if m != nil {
		return m.RValidators
	}
	return nil
}

func (m *MerkleRootsSigned) GetPValidators() [][]byte {
	if m != nil {
		return m.PValidators
	}
	return nil
}

type SignSchnorr struct {
	Wallet                 string   `protobuf:"bytes,1,opt,name=wallet,proto3" json:"wallet,omitempty"`
	RSchnorr               []byte   `protobuf:"bytes,2,opt,name=rSchnorr,proto3" json:"rSchnorr,omitempty"`
	PSchnorr               []byte   `protobuf:"bytes,3,opt,name=pSchnorr,proto3" json:"pSchnorr,omitempty"`
	SignTransaction        []byte   `protobuf:"bytes,4,opt,name=signTransaction,proto3" json:"signTransaction,omitempty"`
	SignReceipt            []byte   `protobuf:"bytes,5,opt,name=signReceipt,proto3" json:"signReceipt,omitempty"`
	MessageSignTransaction []byte   `protobuf:"bytes,6,opt,name=messageSignTransaction,proto3" json:"messageSignTransaction,omitempty"`
	MessageSignReceipt     []byte   `protobuf:"bytes,7,opt,name=messageSignReceipt,proto3" json:"messageSignReceipt,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *SignSchnorr) Reset()         { *m = SignSchnorr{} }
func (m *SignSchnorr) String() string { return proto.CompactTextString(m) }
func (*SignSchnorr) ProtoMessage()    {}
func (*SignSchnorr) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ac6287ce250c9a, []int{3}
}

func (m *SignSchnorr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignSchnorr.Unmarshal(m, b)
}
func (m *SignSchnorr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignSchnorr.Marshal(b, m, deterministic)
}
func (m *SignSchnorr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignSchnorr.Merge(m, src)
}
func (m *SignSchnorr) XXX_Size() int {
	return xxx_messageInfo_SignSchnorr.Size(m)
}
func (m *SignSchnorr) XXX_DiscardUnknown() {
	xxx_messageInfo_SignSchnorr.DiscardUnknown(m)
}

var xxx_messageInfo_SignSchnorr proto.InternalMessageInfo

func (m *SignSchnorr) GetWallet() string {
	if m != nil {
		return m.Wallet
	}
	return ""
}

func (m *SignSchnorr) GetRSchnorr() []byte {
	if m != nil {
		return m.RSchnorr
	}
	return nil
}

func (m *SignSchnorr) GetPSchnorr() []byte {
	if m != nil {
		return m.PSchnorr
	}
	return nil
}

func (m *SignSchnorr) GetSignTransaction() []byte {
	if m != nil {
		return m.SignTransaction
	}
	return nil
}

func (m *SignSchnorr) GetSignReceipt() []byte {
	if m != nil {
		return m.SignReceipt
	}
	return nil
}

func (m *SignSchnorr) GetMessageSignTransaction() []byte {
	if m != nil {
		return m.MessageSignTransaction
	}
	return nil
}

func (m *SignSchnorr) GetMessageSignReceipt() []byte {
	if m != nil {
		return m.MessageSignReceipt
	}
	return nil
}

type Schnorr struct {
	R                    []byte   `protobuf:"bytes,1,opt,name=r,proto3" json:"r,omitempty"`
	P                    string   `protobuf:"bytes,2,opt,name=p,proto3" json:"p,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Schnorr) Reset()         { *m = Schnorr{} }
func (m *Schnorr) String() string { return proto.CompactTextString(m) }
func (*Schnorr) ProtoMessage()    {}
func (*Schnorr) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ac6287ce250c9a, []int{4}
}

func (m *Schnorr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schnorr.Unmarshal(m, b)
}
func (m *Schnorr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schnorr.Marshal(b, m, deterministic)
}
func (m *Schnorr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schnorr.Merge(m, src)
}
func (m *Schnorr) XXX_Size() int {
	return xxx_messageInfo_Schnorr.Size(m)
}
func (m *Schnorr) XXX_DiscardUnknown() {
	xxx_messageInfo_Schnorr.DiscardUnknown(m)
}

var xxx_messageInfo_Schnorr proto.InternalMessageInfo

func (m *Schnorr) GetR() []byte {
	if m != nil {
		return m.R
	}
	return nil
}

func (m *Schnorr) GetP() string {
	if m != nil {
		return m.P
	}
	return ""
}

type AccountState struct {
	Balance              uint64   `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Nonce                uint32   `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountState) Reset()         { *m = AccountState{} }
func (m *AccountState) String() string { return proto.CompactTextString(m) }
func (*AccountState) ProtoMessage()    {}
func (*AccountState) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ac6287ce250c9a, []int{5}
}

func (m *AccountState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountState.Unmarshal(m, b)
}
func (m *AccountState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountState.Marshal(b, m, deterministic)
}
func (m *AccountState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountState.Merge(m, src)
}
func (m *AccountState) XXX_Size() int {
	return xxx_messageInfo_AccountState.Size(m)
}
func (m *AccountState) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountState.DiscardUnknown(m)
}

var xxx_messageInfo_AccountState proto.InternalMessageInfo

func (m *AccountState) GetBalance() uint64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *AccountState) GetNonce() uint32 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

type ContractState struct {
	Memory               []byte   `protobuf:"bytes,1,opt,name=memory,proto3" json:"memory,omitempty"`
	Globals              []uint64 `protobuf:"varint,2,rep,packed,name=globals,proto3" json:"globals,omitempty"`
	Locked               bool     `protobuf:"varint,3,opt,name=locked,proto3" json:"locked,omitempty"`
	AllowedWallet        []byte   `protobuf:"bytes,4,opt,name=allowedWallet,proto3" json:"allowedWallet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContractState) Reset()         { *m = ContractState{} }
func (m *ContractState) String() string { return proto.CompactTextString(m) }
func (*ContractState) ProtoMessage()    {}
func (*ContractState) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ac6287ce250c9a, []int{6}
}

func (m *ContractState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContractState.Unmarshal(m, b)
}
func (m *ContractState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContractState.Marshal(b, m, deterministic)
}
func (m *ContractState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContractState.Merge(m, src)
}
func (m *ContractState) XXX_Size() int {
	return xxx_messageInfo_ContractState.Size(m)
}
func (m *ContractState) XXX_DiscardUnknown() {
	xxx_messageInfo_ContractState.DiscardUnknown(m)
}

var xxx_messageInfo_ContractState proto.InternalMessageInfo

func (m *ContractState) GetMemory() []byte {
	if m != nil {
		return m.Memory
	}
	return nil
}

func (m *ContractState) GetGlobals() []uint64 {
	if m != nil {
		return m.Globals
	}
	return nil
}

func (m *ContractState) GetLocked() bool {
	if m != nil {
		return m.Locked
	}
	return false
}

func (m *ContractState) GetAllowedWallet() []byte {
	if m != nil {
		return m.AllowedWallet
	}
	return nil
}

type CasperVote struct {
	Source               []byte   `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Target               []byte   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	SourceHeight         uint64   `protobuf:"varint,3,opt,name=sourceHeight,proto3" json:"sourceHeight,omitempty"`
	TargetHeight         uint64   `protobuf:"varint,4,opt,name=targetHeight,proto3" json:"targetHeight,omitempty"`
	R                    []byte   `protobuf:"bytes,5,opt,name=r,proto3" json:"r,omitempty"`
	S                    []byte   `protobuf:"bytes,6,opt,name=s,proto3" json:"s,omitempty"`
	PublicKey            string   `protobuf:"bytes,7,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CasperVote) Reset()         { *m = CasperVote{} }
func (m *CasperVote) String() string { return proto.CompactTextString(m) }
func (*CasperVote) ProtoMessage()    {}
func (*CasperVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ac6287ce250c9a, []int{7}
}

func (m *CasperVote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CasperVote.Unmarshal(m, b)
}
func (m *CasperVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CasperVote.Marshal(b, m, deterministic)
}
func (m *CasperVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CasperVote.Merge(m, src)
}
func (m *CasperVote) XXX_Size() int {
	return xxx_messageInfo_CasperVote.Size(m)
}
func (m *CasperVote) XXX_DiscardUnknown() {
	xxx_messageInfo_CasperVote.DiscardUnknown(m)
}

var xxx_messageInfo_CasperVote proto.InternalMessageInfo

func (m *CasperVote) GetSource() []byte {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *CasperVote) GetTarget() []byte {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *CasperVote) GetSourceHeight() uint64 {
	if m != nil {
		return m.SourceHeight
	}
	return 0
}

func (m *CasperVote) GetTargetHeight() uint64 {
	if m != nil {
		return m.TargetHeight
	}
	return 0
}

func (m *CasperVote) GetR() []byte {
	if m != nil {
		return m.R
	}
	return nil
}

func (m *CasperVote) GetS() []byte {
	if m != nil {
		return m.S
	}
	return nil
}

func (m *CasperVote) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

type ValidatorWithdraw struct {
	PublicKey            string   `protobuf:"bytes,1,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	R                    []byte   `protobuf:"bytes,2,opt,name=r,proto3" json:"r,omitempty"`
	S                    []byte   `protobuf:"bytes,3,opt,name=s,proto3" json:"s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidatorWithdraw) Reset()         { *m = ValidatorWithdraw{} }
func (m *ValidatorWithdraw) String() string { return proto.CompactTextString(m) }
func (*ValidatorWithdraw) ProtoMessage()    {}
func (*ValidatorWithdraw) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ac6287ce250c9a, []int{8}
}

func (m *ValidatorWithdraw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorWithdraw.Unmarshal(m, b)
}
func (m *ValidatorWithdraw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorWithdraw.Marshal(b, m, deterministic)
}
func (m *ValidatorWithdraw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorWithdraw.Merge(m, src)
}
func (m *ValidatorWithdraw) XXX_Size() int {
	return xxx_messageInfo_ValidatorWithdraw.Size(m)
}
func (m *ValidatorWithdraw) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorWithdraw.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorWithdraw proto.InternalMessageInfo

func (m *ValidatorWithdraw) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *ValidatorWithdraw) GetR() []byte {
	if m != nil {
		return m.R
	}
	return nil
}

func (m *ValidatorWithdraw) GetS() []byte {
	if m != nil {
		return m.S
	}
	return nil
}

type Receipt struct {
	Sender               string   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipient            string   `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Amount               uint64   `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Nonce                uint32   `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Receipt) Reset()         { *m = Receipt{} }
func (m *Receipt) String() string { return proto.CompactTextString(m) }
func (*Receipt) ProtoMessage()    {}
func (*Receipt) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ac6287ce250c9a, []int{9}
}

func (m *Receipt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Receipt.Unmarshal(m, b)
}
func (m *Receipt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Receipt.Marshal(b, m, deterministic)
}
func (m *Receipt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Receipt.Merge(m, src)
}
func (m *Receipt) XXX_Size() int {
	return xxx_messageInfo_Receipt.Size(m)
}
func (m *Receipt) XXX_DiscardUnknown() {
	xxx_messageInfo_Receipt.DiscardUnknown(m)
}

var xxx_messageInfo_Receipt proto.InternalMessageInfo

func (m *Receipt) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *Receipt) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *Receipt) GetAmount() uint64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Receipt) GetNonce() uint32 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

type MerkleProof struct {
	MapLeaf              []string     `protobuf:"bytes,1,rep,name=mapLeaf,proto3" json:"mapLeaf,omitempty"`
	MapHash              [][]byte     `protobuf:"bytes,2,rep,name=mapHash,proto3" json:"mapHash,omitempty"`
	Root                 []byte       `protobuf:"bytes,3,opt,name=root,proto3" json:"root,omitempty"`
	Leaf                 []byte       `protobuf:"bytes,4,opt,name=leaf,proto3" json:"leaf,omitempty"`
	Transaction          *Transaction `protobuf:"bytes,5,opt,name=transaction,proto3" json:"transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MerkleProof) Reset()         { *m = MerkleProof{} }
func (m *MerkleProof) String() string { return proto.CompactTextString(m) }
func (*MerkleProof) ProtoMessage()    {}
func (*MerkleProof) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ac6287ce250c9a, []int{10}
}

func (m *MerkleProof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerkleProof.Unmarshal(m, b)
}
func (m *MerkleProof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerkleProof.Marshal(b, m, deterministic)
}
func (m *MerkleProof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerkleProof.Merge(m, src)
}
func (m *MerkleProof) XXX_Size() int {
	return xxx_messageInfo_MerkleProof.Size(m)
}
func (m *MerkleProof) XXX_DiscardUnknown() {
	xxx_messageInfo_MerkleProof.DiscardUnknown(m)
}

var xxx_messageInfo_MerkleProof proto.InternalMessageInfo

func (m *MerkleProof) GetMapLeaf() []string {
	if m != nil {
		return m.MapLeaf
	}
	return nil
}

func (m *MerkleProof) GetMapHash() [][]byte {
	if m != nil {
		return m.MapHash
	}
	return nil
}

func (m *MerkleProof) GetRoot() []byte {
	if m != nil {
		return m.Root
	}
	return nil
}

func (m *MerkleProof) GetLeaf() []byte {
	if m != nil {
		return m.Leaf
	}
	return nil
}

func (m *MerkleProof) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

type MoneyWithdraw struct {
	Wallet               string   `protobuf:"bytes,1,opt,name=wallet,proto3" json:"wallet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoneyWithdraw) Reset()         { *m = MoneyWithdraw{} }
func (m *MoneyWithdraw) String() string { return proto.CompactTextString(m) }
func (*MoneyWithdraw) ProtoMessage()    {}
func (*MoneyWithdraw) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ac6287ce250c9a, []int{11}
}

func (m *MoneyWithdraw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoneyWithdraw.Unmarshal(m, b)
}
func (m *MoneyWithdraw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoneyWithdraw.Marshal(b, m, deterministic)
}
func (m *MoneyWithdraw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoneyWithdraw.Merge(m, src)
}
func (m *MoneyWithdraw) XXX_Size() int {
	return xxx_messageInfo_MoneyWithdraw.Size(m)
}
func (m *MoneyWithdraw) XXX_DiscardUnknown() {
	xxx_messageInfo_MoneyWithdraw.DiscardUnknown(m)
}

var xxx_messageInfo_MoneyWithdraw proto.InternalMessageInfo

func (m *MoneyWithdraw) GetWallet() string {
	if m != nil {
		return m.Wallet
	}
	return ""
}

func init() {
	proto.RegisterType((*Transaction)(nil), "Transaction")
	proto.RegisterType((*Block)(nil), "Block")
	proto.RegisterType((*MerkleRootsSigned)(nil), "MerkleRootsSigned")
	proto.RegisterType((*SignSchnorr)(nil), "signSchnorr")
	proto.RegisterType((*Schnorr)(nil), "Schnorr")
	proto.RegisterType((*AccountState)(nil), "AccountState")
	proto.RegisterType((*ContractState)(nil), "ContractState")
	proto.RegisterType((*CasperVote)(nil), "CasperVote")
	proto.RegisterType((*ValidatorWithdraw)(nil), "ValidatorWithdraw")
	proto.RegisterType((*Receipt)(nil), "Receipt")
	proto.RegisterType((*MerkleProof)(nil), "MerkleProof")
	proto.RegisterType((*MoneyWithdraw)(nil), "MoneyWithdraw")
}

func init() { proto.RegisterFile("blockchain.proto", fileDescriptor_e9ac6287ce250c9a) }

var fileDescriptor_e9ac6287ce250c9a = []byte{
	// 892 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xdb, 0x8e, 0xe4, 0x34,
	0x10, 0x55, 0x2e, 0x7d, 0x49, 0x75, 0x1a, 0x66, 0x2c, 0x18, 0x79, 0x47, 0x0b, 0x0a, 0x11, 0x88,
	0x08, 0xa1, 0x11, 0x02, 0xc4, 0xdb, 0x22, 0xc1, 0x08, 0x69, 0x25, 0x68, 0x09, 0xb9, 0xd1, 0xee,
	0xe3, 0xca, 0x9d, 0x78, 0xba, 0xa3, 0x4d, 0xe2, 0xc8, 0x76, 0xef, 0x30, 0x4f, 0x7c, 0x03, 0x8f,
	0xf3, 0x33, 0xfc, 0x0c, 0x4f, 0xfc, 0x05, 0xb2, 0x9d, 0x6b, 0x5f, 0x46, 0xfb, 0x96, 0x53, 0x75,
	0x5c, 0x2e, 0x57, 0xd9, 0xa7, 0x02, 0x17, 0x9b, 0x82, 0xa7, 0x6f, 0xd3, 0x1d, 0xcd, 0xab, 0x9b,
	0x5a, 0x70, 0xc5, 0xe3, 0xff, 0x5c, 0x58, 0xfc, 0x21, 0x68, 0x25, 0x69, 0xaa, 0x72, 0x5e, 0xa1,
	0x2b, 0x98, 0x4a, 0x56, 0x65, 0x4c, 0x60, 0x27, 0x72, 0x92, 0x90, 0x34, 0x08, 0x3d, 0x87, 0x40,
	0xb0, 0x34, 0xaf, 0x73, 0x56, 0x29, 0xec, 0x46, 0x4e, 0x12, 0x90, 0xde, 0x80, 0x3e, 0x82, 0x49,
	0xc5, 0xab, 0x94, 0x61, 0x2f, 0x72, 0x92, 0x25, 0xb1, 0x40, 0xc7, 0xa2, 0x25, 0xdf, 0x57, 0x0a,
	0xfb, 0x91, 0x93, 0xf8, 0xa4, 0x41, 0xe8, 0x02, 0xbc, 0x2d, 0x95, 0x78, 0x62, 0xb8, 0xfa, 0x53,
	0x47, 0x57, 0x79, 0xc9, 0xa4, 0xa2, 0x65, 0x8d, 0xa7, 0x86, 0xdc, 0x1b, 0xd0, 0x57, 0x70, 0x91,
	0xf2, 0x4a, 0x09, 0x9a, 0xaa, 0x5b, 0xc1, 0xa8, 0xce, 0x13, 0xcf, 0x22, 0x27, 0x99, 0x93, 0x23,
	0x3b, 0xba, 0x86, 0xf9, 0xdd, 0xbe, 0x32, 0x67, 0xc1, 0x73, 0x93, 0x66, 0x87, 0x11, 0x02, 0x9f,
	0x8a, 0xad, 0xc4, 0x41, 0xe4, 0x25, 0x3e, 0x31, 0xdf, 0xda, 0x96, 0x51, 0x45, 0x31, 0x98, 0xd3,
	0x9a, 0x6f, 0x14, 0x82, 0x23, 0xf0, 0xc2, 0x18, 0x1c, 0xa1, 0x91, 0xc4, 0xa1, 0x45, 0x12, 0x7d,
	0x0e, 0xcb, 0x7a, 0xbf, 0x59, 0xa7, 0xbb, 0x8a, 0x0b, 0xf1, 0x2b, 0x7b, 0xc0, 0x4b, 0xe3, 0x19,
	0x1b, 0x75, 0x3d, 0xe4, 0x8e, 0x8a, 0x0c, 0x7f, 0x60, 0xeb, 0x61, 0x40, 0xfc, 0xe8, 0xc2, 0xe4,
	0x67, 0xdd, 0x00, 0xed, 0xcf, 0xab, 0x8c, 0xfd, 0x69, 0x8a, 0xec, 0x13, 0x0b, 0xc6, 0x55, 0x70,
	0x0f, 0xab, 0x70, 0x0d, 0xf3, 0x5a, 0xb0, 0x77, 0x2f, 0xa9, 0xdc, 0x99, 0x32, 0x87, 0xa4, 0xc3,
	0x3a, 0x5e, 0x99, 0x57, 0x4c, 0x98, 0x42, 0x07, 0xc4, 0x02, 0xf4, 0x0d, 0x84, 0xaa, 0x6f, 0xad,
	0x2e, 0xb8, 0x97, 0x2c, 0xbe, 0x0d, 0x6f, 0x06, 0xfd, 0x26, 0x23, 0x06, 0xfa, 0x1e, 0x3e, 0x2e,
	0x99, 0x78, 0x5b, 0x30, 0xc2, 0xb9, 0x1a, 0xd0, 0x4c, 0x4f, 0x42, 0x72, 0xda, 0x89, 0xbe, 0x86,
	0xcb, 0xde, 0x41, 0x58, 0xca, 0xf2, 0x5a, 0x99, 0x06, 0x85, 0xe4, 0xd8, 0xd1, 0xd7, 0x66, 0x3e,
	0xac, 0xcd, 0xbf, 0x1e, 0x5c, 0xae, 0x3a, 0xae, 0x5c, 0xe7, 0xdb, 0x8a, 0x65, 0x3d, 0xd7, 0x19,
	0x70, 0xd1, 0x0f, 0x70, 0xd5, 0x87, 0x95, 0xc3, 0x34, 0xdd, 0xc8, 0x4b, 0x42, 0x72, 0xc6, 0x8b,
	0x6e, 0x00, 0x0d, 0x3c, 0x6d, 0xa2, 0x9e, 0x59, 0x73, 0xc2, 0x83, 0x7e, 0x81, 0x4f, 0xc5, 0x1b,
	0x69, 0x32, 0x59, 0x9d, 0xde, 0xcf, 0x37, 0x87, 0xfc, 0x44, 0xac, 0x9f, 0x20, 0xe9, 0x30, 0xf2,
	0xe9, 0x30, 0x13, 0x1b, 0x46, 0x3e, 0x19, 0xe6, 0x05, 0x5c, 0x9f, 0xc8, 0xa6, 0x3d, 0x85, 0x6d,
	0xd0, 0xb3, 0xe3, 0x4c, 0xda, 0xc3, 0xbc, 0x80, 0x6b, 0x79, 0x7e, 0xb9, 0xed, 0xd6, 0x33, 0x79,
	0x76, 0xf9, 0x67, 0x10, 0x8a, 0x37, 0xef, 0x68, 0x91, 0x67, 0x54, 0x71, 0x21, 0xf1, 0xdc, 0x54,
	0x6d, 0x21, 0x5e, 0x75, 0x26, 0x4d, 0xa9, 0x87, 0x94, 0xc0, 0x52, 0xea, 0x9e, 0x12, 0xff, 0xed,
	0xc2, 0x42, 0xe7, 0xd0, 0x3c, 0x15, 0xad, 0x10, 0xf7, 0xb4, 0x28, 0x98, 0x32, 0x0d, 0x0e, 0x48,
	0x83, 0xf4, 0x5d, 0x17, 0x0d, 0xc7, 0x3c, 0x84, 0x90, 0x74, 0xd8, 0xbc, 0x83, 0xd6, 0xd7, 0xbe,
	0x83, 0xd6, 0x97, 0xc0, 0x87, 0x3a, 0xfc, 0x71, 0x8b, 0x0e, 0xcd, 0x28, 0xb2, 0x89, 0xb4, 0xe7,
	0xb7, 0x1d, 0x18, 0x9a, 0xec, 0x2d, 0x93, 0x92, 0x6e, 0xd9, 0xfa, 0x20, 0xa4, 0xad, 0xf5, 0x19,
	0xaf, 0xbd, 0x65, 0x9d, 0x67, 0x5c, 0xe0, 0x13, 0x9e, 0xf8, 0x0b, 0x98, 0xb5, 0xe9, 0x1b, 0xe1,
	0x71, 0x06, 0xc2, 0x53, 0x37, 0x52, 0xeb, 0xd4, 0xf1, 0x8f, 0x10, 0xfe, 0x94, 0xa6, 0x5a, 0x3f,
	0xd7, 0x8a, 0x2a, 0x86, 0x30, 0xcc, 0x36, 0xb4, 0xa0, 0x5a, 0x74, 0xad, 0x88, 0xb4, 0xb0, 0x17,
	0x63, 0x77, 0x20, 0xc6, 0xf1, 0x5f, 0xb0, 0xbc, 0x6d, 0xc4, 0xd2, 0x06, 0xb8, 0x82, 0x69, 0xc9,
	0x4a, 0x2e, 0x1e, 0x5a, 0xa5, 0xb7, 0x48, 0x07, 0xde, 0x16, 0x7c, 0x43, 0x0b, 0x69, 0x9e, 0x93,
	0x4f, 0x5a, 0xa8, 0x57, 0x68, 0xf5, 0x62, 0x99, 0xa9, 0xfb, 0x9c, 0x34, 0x48, 0x6b, 0x22, 0x2d,
	0x0a, 0x7e, 0xcf, 0xb2, 0xd7, 0xb6, 0x99, 0xb6, 0xe6, 0x63, 0x63, 0xfc, 0x8f, 0x03, 0x70, 0x4b,
	0x65, 0xcd, 0xc4, 0x2b, 0x6e, 0xb7, 0x97, 0x7c, 0x2f, 0x9a, 0xf4, 0xf5, 0xa0, 0x31, 0x48, 0xdb,
	0x15, 0x15, 0x5b, 0xa6, 0x9a, 0xc6, 0x37, 0x08, 0xc5, 0x10, 0x5a, 0xc6, 0x4b, 0x96, 0x6f, 0x77,
	0xca, 0xa4, 0xe0, 0x93, 0x91, 0x4d, 0x73, 0x2c, 0xbb, 0xe1, 0xd8, 0xb1, 0x33, 0xb2, 0xd9, 0x1a,
	0x4f, 0x46, 0xe2, 0x3e, 0x6d, 0xc5, 0xfd, 0x39, 0x04, 0xf5, 0x7e, 0x53, 0xe4, 0xa9, 0x16, 0xf6,
	0x99, 0x1d, 0x72, 0x9d, 0x21, 0x5e, 0xc1, 0x65, 0x77, 0x95, 0x5f, 0xe7, 0x6a, 0x97, 0x09, 0x7a,
	0x3f, 0x5e, 0xe2, 0x1c, 0x2c, 0xb1, 0x9b, 0xb9, 0xa3, 0xcd, 0xbc, 0x66, 0xb3, 0xb8, 0x84, 0x59,
	0x7b, 0xd5, 0xc6, 0x43, 0x37, 0x78, 0xcf, 0xa1, 0xdb, 0x8f, 0x57, 0x6f, 0x34, 0x5e, 0xbb, 0xfe,
	0xfb, 0xc3, 0xfe, 0x3f, 0x3a, 0xb0, 0xb0, 0xef, 0xfa, 0x77, 0xc1, 0xf9, 0x9d, 0x6e, 0x73, 0x49,
	0xeb, 0xdf, 0x18, 0xbd, 0xc3, 0x4e, 0xe4, 0x25, 0x01, 0x69, 0x61, 0xe3, 0x31, 0x73, 0xc6, 0xea,
	0x69, 0x0b, 0xf5, 0xb0, 0x14, 0x9c, 0xab, 0xe6, 0x0c, 0xe6, 0x5b, 0xdb, 0x0a, 0x1d, 0xc4, 0xf6,
	0xdc, 0x7c, 0xa3, 0x1b, 0x58, 0xa8, 0x03, 0x79, 0x3b, 0x9c, 0x3b, 0x43, 0x42, 0xfc, 0x25, 0x2c,
	0x57, 0xbc, 0x62, 0x0f, 0x5d, 0x55, 0xcf, 0xe8, 0xc2, 0x66, 0x6a, 0x7e, 0x5a, 0xbe, 0xfb, 0x3f,
	0x00, 0x00, 0xff, 0xff, 0x79, 0x30, 0xb4, 0x78, 0xc8, 0x08, 0x00, 0x00,
}
